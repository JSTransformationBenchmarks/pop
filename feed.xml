<?xml version="1.0" encoding="utf-8" ?><feed xmlns="http://www.w3.org/2005/Atom"><title>Pop Blog</title><link href="http://popjs.comfeed.xml" rel="self"></link><link href="http://popjs.com"></link><updated>2011-07-25T00:07:00Z</updated><id>http://popjs.com</id><author><name>Pop Blog</name></author><entry><title>Pop 0.0.5</title><link href="http://popjs.com/2011/07/25/pop-0.0.5"></link><updated>2011-07-25T00:07:00Z</updated><id>http://popjs.com/2011/07/25/pop-0.0.5</id><content type="html">&lt;p&gt;Pop 0.0.5 has been released.  This version introduces a plugin architecture and post-filters.&lt;/p&gt;

&lt;h2&gt;Post-Filters&lt;/h2&gt;

&lt;p&gt;A post-filter can alter HTML after it has been generated by the template engine.  The structure is the same as helpers and pre-filters.  Add a file to &lt;code&gt;_lib/post-filters.js&lt;/code&gt;:&lt;/p&gt;

&lt;pre class="prettyprint lang-javascript"&gt;
module.exports = {
  /**
    * Converts Alex's name to something more suitable.
    *
    * @param {String} The HTML to transform
    * @return {String} The transformed HTML
    */
  myFilter: function(html) {
    return html.replace(/Alex/, 'Super Douche');
  }
};
&lt;/pre&gt;

&lt;h2&gt;Using Plugins&lt;/h2&gt;

&lt;p&gt;Plugins are bundles of helpers, pre-filters, and post-filters that are loaded using the config file.  Here's an example, from this site:&lt;/p&gt;

&lt;pre class="prettyprint lang-javascript"&gt;
{  "url": "http://popjs.com/"
 , "title": "Pop Blog"
 , "permalink": "/:year/:month/:day/:title"
 , "paginate": 10
 , "exclude": ["\\.swp"]
 , "require": ["pop-disqus"]
 , "autoGenerate": [{"feed": "feed.xml"}] }
&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;require&lt;/code&gt; property loads the plugin found in the CommonJS module &lt;code&gt;pop-disqus&lt;/code&gt;.  This plugin is available through npm.&lt;/p&gt;

&lt;h2&gt;Writing Plugins&lt;/h2&gt;

&lt;p&gt;Create a CommonJS module with a suitable &lt;code&gt;package.json&lt;/code&gt; that exports an object with one or more of these properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;helpers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postFilters&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the usual rules apply.  Get started by looking at &lt;a href="https://github.com/alexyoung/pop-disqus"&gt;pop-disqus&lt;/a&gt;.  Write tests, even if they're basic!&lt;/p&gt;</content></entry><entry><title>Pop 0.0.4</title><link href="http://popjs.com/2011/07/24/pop-0.0.4"></link><updated>2011-07-24T00:07:00Z</updated><id>http://popjs.com/2011/07/24/pop-0.0.4</id><content type="html">&lt;p&gt;Pop 0.0.4 is out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Running &lt;code&gt;pop&lt;/code&gt; will generate a site in the current directory and exit&lt;/li&gt;
&lt;li&gt;Running &lt;code&gt;pop&lt;/code&gt; on a path that doesn't look like a Pop site will print an error rather than a confusing stack trace&lt;/li&gt;
&lt;li&gt;Pop server mode will watch all subdirectories for changes, so things like stylesheets (including Stylus files) will automatically regenerate the changed file&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Pop 0.0.3</title><link href="http://popjs.com/2011/07/23/pop-0.0.3"></link><updated>2011-07-23T00:07:00Z</updated><id>http://popjs.com/2011/07/23/pop-0.0.3</id><content type="html">&lt;p&gt;Pop version 0.0.3 is out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Atom feed helper takes less options (the variables are all in &lt;code&gt;config&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Atom feed uses &lt;code&gt;config.perPage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Post file names with extra dots will be parsed correctly&lt;/li&gt;
&lt;li&gt;YAML front-matter will be extracted less greedily&lt;/li&gt;
&lt;li&gt;YAML front-matter can now contain a &lt;code&gt;summary&lt;/code&gt; property to make it easier to display post summaries in lists&lt;/li&gt;
&lt;li&gt;Trailing slashes will be removed from &lt;code&gt;config.url&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Pop 0.0.2</title><link href="http://popjs.com/2011/07/22/pop-0.0.2"></link><updated>2011-07-22T00:07:00Z</updated><id>http://popjs.com/2011/07/22/pop-0.0.2</id><content type="html">&lt;p&gt;Pop version 0.0.2 has been released.  This version adds additional default styles to the site generator (blockquotes, pagination), and adds post summary support.&lt;/p&gt;

&lt;p&gt;Writing YAML front-matter like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      ---
      layout: post
      title: Amazing Facts About Lions
      summary: Above all, lions are amazing creatures.
      author: Dave Grohl
      tags:   
      - releases
      ---

      Post content here.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will make &lt;code&gt;post.summary&lt;/code&gt; available to templates.  It gets processed with markdown or textile, depending on the format of the post, and also applies helpers.  I've added this to the &lt;code&gt;hNews()&lt;/code&gt; helper when used to generate summaries.&lt;/p&gt;</content></entry><entry><title>Pop Released</title><link href="http://popjs.com/2011/07/21/example-post-about-something"></link><updated>2011-07-21T00:07:00Z</updated><id>http://popjs.com/2011/07/21/example-post-about-something</id><content type="html">&lt;p&gt;Pop version 0.0.1 has been released:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/alexyoung/pop"&gt;alexyoung / pop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This includes &lt;a href="https://github.com/alexyoung/stextile"&gt;stextile&lt;/a&gt;, which is a rough-and-ready &lt;a href="http://www.textism.com/tools/textile/"&gt;Textile&lt;/a&gt; parser.  Pop also supports &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pop sites use &lt;a href="http://jade-lang.com/"&gt;Jade&lt;/a&gt; and &lt;a href="http://learnboost.github.com/stylus/"&gt;Stylus&lt;/a&gt;.  These are CSS selector-based shorthands for quickly writing HTML and CSS.&lt;/p&gt;</content></entry></feed>
